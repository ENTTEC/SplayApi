// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var SplayApi = SplayApi || {};

/**
 * @enum {number}
 */
SplayApi.PLAYLIST_STATUS_TYPE = {
  PLAYLIST_STATUS_IDLE: 0,
  PLAYLIST_STATUS_PLAYING: 1,
  PLAYLIST_STATUS_PAUSED: 2,
  PLAYLIST_STATUS_STOPPED: 3,
  PLAYLIST_STATUS_RECORD: 4,
  PLAYLIST_STATUS_ERROR: 5
};

/**
 * @enum {string}
 */
SplayApi.PLAYLIST_STATUS_TYPEName = {
  '0': 'PLAYLIST_STATUS_IDLE',
  '1': 'PLAYLIST_STATUS_PLAYING',
  '2': 'PLAYLIST_STATUS_PAUSED',
  '3': 'PLAYLIST_STATUS_STOPPED',
  '4': 'PLAYLIST_STATUS_RECORD',
  '5': 'PLAYLIST_STATUS_ERROR'
};

/**
 * @constructor
 */
SplayApi.Playlist = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.Playlist}
 */
SplayApi.Playlist.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.Playlist=} obj
 * @returns {SplayApi.Playlist}
 */
SplayApi.Playlist.getRootAsPlaylist = function(bb, obj) {
  return (obj || new SplayApi.Playlist).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.Playlist=} obj
 * @returns {SplayApi.Playlist}
 */
SplayApi.Playlist.getSizePrefixedRootAsPlaylist = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.Playlist).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.playlistId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {SplayApi.PLAYLIST_STATUS_TYPE}
 */
SplayApi.Playlist.prototype.status = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {SplayApi.PLAYLIST_STATUS_TYPE} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.PLAYLIST_STATUS_TYPE.PLAYLIST_STATUS_IDLE;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.currentTime = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.duration = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.intensity = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
SplayApi.Playlist.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {boolean}
 */
SplayApi.Playlist.prototype.waitingTriggers = function() {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
SplayApi.Playlist.prototype.notificationMessage = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 18);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {SplayApi.Trigger=} obj
 * @returns {SplayApi.Trigger|null}
 */
SplayApi.Playlist.prototype.startTrigger = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 20);
  return offset ? (obj || new SplayApi.Trigger).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {SplayApi.Trigger=} obj
 * @returns {SplayApi.Trigger|null}
 */
SplayApi.Playlist.prototype.stopTrigger = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 22);
  return offset ? (obj || new SplayApi.Trigger).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {number} index
 * @param {SplayApi.Trigger=} obj
 * @returns {SplayApi.Trigger}
 */
SplayApi.Playlist.prototype.triggers = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? (obj || new SplayApi.Trigger).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.triggersLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 24);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {SplayApi.Event=} obj
 * @returns {SplayApi.Event}
 */
SplayApi.Playlist.prototype.events = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? (obj || new SplayApi.Event).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.eventsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 26);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {SplayApi.Cue=} obj
 * @returns {SplayApi.Cue}
 */
SplayApi.Playlist.prototype.track1 = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? (obj || new SplayApi.Cue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.track1Length = function() {
  var offset = this.bb.__offset(this.bb_pos, 28);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {SplayApi.Cue=} obj
 * @returns {SplayApi.Cue}
 */
SplayApi.Playlist.prototype.track2 = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? (obj || new SplayApi.Cue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.track2Length = function() {
  var offset = this.bb.__offset(this.bb_pos, 30);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {SplayApi.Cue=} obj
 * @returns {SplayApi.Cue}
 */
SplayApi.Playlist.prototype.track3 = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? (obj || new SplayApi.Cue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.track3Length = function() {
  var offset = this.bb.__offset(this.bb_pos, 32);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {SplayApi.Cue=} obj
 * @returns {SplayApi.Cue}
 */
SplayApi.Playlist.prototype.track4 = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? (obj || new SplayApi.Cue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.Playlist.prototype.track4Length = function() {
  var offset = this.bb.__offset(this.bb_pos, 34);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.Playlist.startPlaylist = function(builder) {
  builder.startObject(16);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playlistId
 */
SplayApi.Playlist.addPlaylistId = function(builder, playlistId) {
  builder.addFieldInt32(0, playlistId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.PLAYLIST_STATUS_TYPE} status
 */
SplayApi.Playlist.addStatus = function(builder, status) {
  builder.addFieldInt8(1, status, SplayApi.PLAYLIST_STATUS_TYPE.PLAYLIST_STATUS_IDLE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} currentTime
 */
SplayApi.Playlist.addCurrentTime = function(builder, currentTime) {
  builder.addFieldInt32(2, currentTime, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} duration
 */
SplayApi.Playlist.addDuration = function(builder, duration) {
  builder.addFieldInt32(3, duration, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} intensity
 */
SplayApi.Playlist.addIntensity = function(builder, intensity) {
  builder.addFieldFloat32(4, intensity, 0.0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
SplayApi.Playlist.addName = function(builder, nameOffset) {
  builder.addFieldOffset(5, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} waitingTriggers
 */
SplayApi.Playlist.addWaitingTriggers = function(builder, waitingTriggers) {
  builder.addFieldInt8(6, +waitingTriggers, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} notificationMessageOffset
 */
SplayApi.Playlist.addNotificationMessage = function(builder, notificationMessageOffset) {
  builder.addFieldOffset(7, notificationMessageOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} startTriggerOffset
 */
SplayApi.Playlist.addStartTrigger = function(builder, startTriggerOffset) {
  builder.addFieldOffset(8, startTriggerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} stopTriggerOffset
 */
SplayApi.Playlist.addStopTrigger = function(builder, stopTriggerOffset) {
  builder.addFieldOffset(9, stopTriggerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} triggersOffset
 */
SplayApi.Playlist.addTriggers = function(builder, triggersOffset) {
  builder.addFieldOffset(10, triggersOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.Playlist.createTriggersVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.Playlist.startTriggersVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} eventsOffset
 */
SplayApi.Playlist.addEvents = function(builder, eventsOffset) {
  builder.addFieldOffset(11, eventsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.Playlist.createEventsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.Playlist.startEventsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} track1Offset
 */
SplayApi.Playlist.addTrack1 = function(builder, track1Offset) {
  builder.addFieldOffset(12, track1Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.Playlist.createTrack1Vector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.Playlist.startTrack1Vector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} track2Offset
 */
SplayApi.Playlist.addTrack2 = function(builder, track2Offset) {
  builder.addFieldOffset(13, track2Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.Playlist.createTrack2Vector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.Playlist.startTrack2Vector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} track3Offset
 */
SplayApi.Playlist.addTrack3 = function(builder, track3Offset) {
  builder.addFieldOffset(14, track3Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.Playlist.createTrack3Vector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.Playlist.startTrack3Vector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} track4Offset
 */
SplayApi.Playlist.addTrack4 = function(builder, track4Offset) {
  builder.addFieldOffset(15, track4Offset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.Playlist.createTrack4Vector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.Playlist.startTrack4Vector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.Playlist.endPlaylist = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playlistId
 * @param {SplayApi.PLAYLIST_STATUS_TYPE} status
 * @param {number} currentTime
 * @param {number} duration
 * @param {number} intensity
 * @param {flatbuffers.Offset} nameOffset
 * @param {boolean} waitingTriggers
 * @param {flatbuffers.Offset} notificationMessageOffset
 * @param {flatbuffers.Offset} startTriggerOffset
 * @param {flatbuffers.Offset} stopTriggerOffset
 * @param {flatbuffers.Offset} triggersOffset
 * @param {flatbuffers.Offset} eventsOffset
 * @param {flatbuffers.Offset} track1Offset
 * @param {flatbuffers.Offset} track2Offset
 * @param {flatbuffers.Offset} track3Offset
 * @param {flatbuffers.Offset} track4Offset
 * @returns {flatbuffers.Offset}
 */
SplayApi.Playlist.createPlaylist = function(builder, playlistId, status, currentTime, duration, intensity, nameOffset, waitingTriggers, notificationMessageOffset, startTriggerOffset, stopTriggerOffset, triggersOffset, eventsOffset, track1Offset, track2Offset, track3Offset, track4Offset) {
  SplayApi.Playlist.startPlaylist(builder);
  SplayApi.Playlist.addPlaylistId(builder, playlistId);
  SplayApi.Playlist.addStatus(builder, status);
  SplayApi.Playlist.addCurrentTime(builder, currentTime);
  SplayApi.Playlist.addDuration(builder, duration);
  SplayApi.Playlist.addIntensity(builder, intensity);
  SplayApi.Playlist.addName(builder, nameOffset);
  SplayApi.Playlist.addWaitingTriggers(builder, waitingTriggers);
  SplayApi.Playlist.addNotificationMessage(builder, notificationMessageOffset);
  SplayApi.Playlist.addStartTrigger(builder, startTriggerOffset);
  SplayApi.Playlist.addStopTrigger(builder, stopTriggerOffset);
  SplayApi.Playlist.addTriggers(builder, triggersOffset);
  SplayApi.Playlist.addEvents(builder, eventsOffset);
  SplayApi.Playlist.addTrack1(builder, track1Offset);
  SplayApi.Playlist.addTrack2(builder, track2Offset);
  SplayApi.Playlist.addTrack3(builder, track3Offset);
  SplayApi.Playlist.addTrack4(builder, track4Offset);
  return SplayApi.Playlist.endPlaylist(builder);
}

/**
 * @constructor
 */
SplayApi.PlayPlaylistReq = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.PlayPlaylistReq}
 */
SplayApi.PlayPlaylistReq.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.PlayPlaylistReq=} obj
 * @returns {SplayApi.PlayPlaylistReq}
 */
SplayApi.PlayPlaylistReq.getRootAsPlayPlaylistReq = function(bb, obj) {
  return (obj || new SplayApi.PlayPlaylistReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.PlayPlaylistReq=} obj
 * @returns {SplayApi.PlayPlaylistReq}
 */
SplayApi.PlayPlaylistReq.getSizePrefixedRootAsPlayPlaylistReq = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.PlayPlaylistReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {SplayApi.COMMAND}
 */
SplayApi.PlayPlaylistReq.prototype.command = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {SplayApi.COMMAND} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.COMMAND.PLAY_PLAYLIST_COMMAND;
};

/**
 * @returns {number}
 */
SplayApi.PlayPlaylistReq.prototype.playlistId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.PlayPlaylistReq.startPlayPlaylistReq = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.COMMAND} command
 */
SplayApi.PlayPlaylistReq.addCommand = function(builder, command) {
  builder.addFieldInt8(0, command, SplayApi.COMMAND.PLAY_PLAYLIST_COMMAND);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playlistId
 */
SplayApi.PlayPlaylistReq.addPlaylistId = function(builder, playlistId) {
  builder.addFieldInt32(1, playlistId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.PlayPlaylistReq.endPlayPlaylistReq = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {NS14796042768305698587.SplayApi.COMMAND} command
 * @param {number} playlistId
 * @returns {flatbuffers.Offset}
 */
SplayApi.PlayPlaylistReq.createPlayPlaylistReq = function(builder, command, playlistId) {
  SplayApi.PlayPlaylistReq.startPlayPlaylistReq(builder);
  SplayApi.PlayPlaylistReq.addCommand(builder, command);
  SplayApi.PlayPlaylistReq.addPlaylistId(builder, playlistId);
  return SplayApi.PlayPlaylistReq.endPlayPlaylistReq(builder);
}

/**
 * @constructor
 */
SplayApi.PausePlaylistReq = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.PausePlaylistReq}
 */
SplayApi.PausePlaylistReq.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.PausePlaylistReq=} obj
 * @returns {SplayApi.PausePlaylistReq}
 */
SplayApi.PausePlaylistReq.getRootAsPausePlaylistReq = function(bb, obj) {
  return (obj || new SplayApi.PausePlaylistReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.PausePlaylistReq=} obj
 * @returns {SplayApi.PausePlaylistReq}
 */
SplayApi.PausePlaylistReq.getSizePrefixedRootAsPausePlaylistReq = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.PausePlaylistReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {SplayApi.COMMAND}
 */
SplayApi.PausePlaylistReq.prototype.command = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {SplayApi.COMMAND} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.COMMAND.PAUSE_PLAYLIST_COMMAND;
};

/**
 * @returns {number}
 */
SplayApi.PausePlaylistReq.prototype.playlistId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.PausePlaylistReq.startPausePlaylistReq = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.COMMAND} command
 */
SplayApi.PausePlaylistReq.addCommand = function(builder, command) {
  builder.addFieldInt8(0, command, SplayApi.COMMAND.PAUSE_PLAYLIST_COMMAND);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playlistId
 */
SplayApi.PausePlaylistReq.addPlaylistId = function(builder, playlistId) {
  builder.addFieldInt32(1, playlistId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.PausePlaylistReq.endPausePlaylistReq = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {NS14796042768305698587.SplayApi.COMMAND} command
 * @param {number} playlistId
 * @returns {flatbuffers.Offset}
 */
SplayApi.PausePlaylistReq.createPausePlaylistReq = function(builder, command, playlistId) {
  SplayApi.PausePlaylistReq.startPausePlaylistReq(builder);
  SplayApi.PausePlaylistReq.addCommand(builder, command);
  SplayApi.PausePlaylistReq.addPlaylistId(builder, playlistId);
  return SplayApi.PausePlaylistReq.endPausePlaylistReq(builder);
}

/**
 * @constructor
 */
SplayApi.StopPlaylistReq = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.StopPlaylistReq}
 */
SplayApi.StopPlaylistReq.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.StopPlaylistReq=} obj
 * @returns {SplayApi.StopPlaylistReq}
 */
SplayApi.StopPlaylistReq.getRootAsStopPlaylistReq = function(bb, obj) {
  return (obj || new SplayApi.StopPlaylistReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.StopPlaylistReq=} obj
 * @returns {SplayApi.StopPlaylistReq}
 */
SplayApi.StopPlaylistReq.getSizePrefixedRootAsStopPlaylistReq = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.StopPlaylistReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {SplayApi.COMMAND}
 */
SplayApi.StopPlaylistReq.prototype.command = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {SplayApi.COMMAND} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.COMMAND.STOP_PLAYLIST_COMMAND;
};

/**
 * @returns {number}
 */
SplayApi.StopPlaylistReq.prototype.playlistId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.StopPlaylistReq.startStopPlaylistReq = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.COMMAND} command
 */
SplayApi.StopPlaylistReq.addCommand = function(builder, command) {
  builder.addFieldInt8(0, command, SplayApi.COMMAND.STOP_PLAYLIST_COMMAND);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playlistId
 */
SplayApi.StopPlaylistReq.addPlaylistId = function(builder, playlistId) {
  builder.addFieldInt32(1, playlistId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.StopPlaylistReq.endStopPlaylistReq = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {NS14796042768305698587.SplayApi.COMMAND} command
 * @param {number} playlistId
 * @returns {flatbuffers.Offset}
 */
SplayApi.StopPlaylistReq.createStopPlaylistReq = function(builder, command, playlistId) {
  SplayApi.StopPlaylistReq.startStopPlaylistReq(builder);
  SplayApi.StopPlaylistReq.addCommand(builder, command);
  SplayApi.StopPlaylistReq.addPlaylistId(builder, playlistId);
  return SplayApi.StopPlaylistReq.endStopPlaylistReq(builder);
}

/**
 * @constructor
 */
SplayApi.GetPlaylistReq = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.GetPlaylistReq}
 */
SplayApi.GetPlaylistReq.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetPlaylistReq=} obj
 * @returns {SplayApi.GetPlaylistReq}
 */
SplayApi.GetPlaylistReq.getRootAsGetPlaylistReq = function(bb, obj) {
  return (obj || new SplayApi.GetPlaylistReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetPlaylistReq=} obj
 * @returns {SplayApi.GetPlaylistReq}
 */
SplayApi.GetPlaylistReq.getSizePrefixedRootAsGetPlaylistReq = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.GetPlaylistReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {SplayApi.COMMAND}
 */
SplayApi.GetPlaylistReq.prototype.command = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {SplayApi.COMMAND} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.COMMAND.GET_PLAYLIST_COMMAND;
};

/**
 * @returns {number}
 */
SplayApi.GetPlaylistReq.prototype.playlistId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.GetPlaylistReq.startGetPlaylistReq = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.COMMAND} command
 */
SplayApi.GetPlaylistReq.addCommand = function(builder, command) {
  builder.addFieldInt8(0, command, SplayApi.COMMAND.GET_PLAYLIST_COMMAND);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} playlistId
 */
SplayApi.GetPlaylistReq.addPlaylistId = function(builder, playlistId) {
  builder.addFieldInt32(1, playlistId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetPlaylistReq.endGetPlaylistReq = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {NS14796042768305698587.SplayApi.COMMAND} command
 * @param {number} playlistId
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetPlaylistReq.createGetPlaylistReq = function(builder, command, playlistId) {
  SplayApi.GetPlaylistReq.startGetPlaylistReq(builder);
  SplayApi.GetPlaylistReq.addCommand(builder, command);
  SplayApi.GetPlaylistReq.addPlaylistId(builder, playlistId);
  return SplayApi.GetPlaylistReq.endGetPlaylistReq(builder);
}

/**
 * @constructor
 */
SplayApi.GetPlaylistRes = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.GetPlaylistRes}
 */
SplayApi.GetPlaylistRes.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetPlaylistRes=} obj
 * @returns {SplayApi.GetPlaylistRes}
 */
SplayApi.GetPlaylistRes.getRootAsGetPlaylistRes = function(bb, obj) {
  return (obj || new SplayApi.GetPlaylistRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetPlaylistRes=} obj
 * @returns {SplayApi.GetPlaylistRes}
 */
SplayApi.GetPlaylistRes.getSizePrefixedRootAsGetPlaylistRes = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.GetPlaylistRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {SplayApi.Playlist=} obj
 * @returns {SplayApi.Playlist|null}
 */
SplayApi.GetPlaylistRes.prototype.playlist = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new SplayApi.Playlist).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.GetPlaylistRes.startGetPlaylistRes = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playlistOffset
 */
SplayApi.GetPlaylistRes.addPlaylist = function(builder, playlistOffset) {
  builder.addFieldOffset(0, playlistOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetPlaylistRes.endGetPlaylistRes = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playlistOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetPlaylistRes.createGetPlaylistRes = function(builder, playlistOffset) {
  SplayApi.GetPlaylistRes.startGetPlaylistRes(builder);
  SplayApi.GetPlaylistRes.addPlaylist(builder, playlistOffset);
  return SplayApi.GetPlaylistRes.endGetPlaylistRes(builder);
}

/**
 * @constructor
 */
SplayApi.GetAllPlaylistsReq = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.GetAllPlaylistsReq}
 */
SplayApi.GetAllPlaylistsReq.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetAllPlaylistsReq=} obj
 * @returns {SplayApi.GetAllPlaylistsReq}
 */
SplayApi.GetAllPlaylistsReq.getRootAsGetAllPlaylistsReq = function(bb, obj) {
  return (obj || new SplayApi.GetAllPlaylistsReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetAllPlaylistsReq=} obj
 * @returns {SplayApi.GetAllPlaylistsReq}
 */
SplayApi.GetAllPlaylistsReq.getSizePrefixedRootAsGetAllPlaylistsReq = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.GetAllPlaylistsReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {SplayApi.COMMAND}
 */
SplayApi.GetAllPlaylistsReq.prototype.command = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {SplayApi.COMMAND} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.COMMAND.GET_ALL_PLAYLISTS_COMMAND;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.GetAllPlaylistsReq.startGetAllPlaylistsReq = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.COMMAND} command
 */
SplayApi.GetAllPlaylistsReq.addCommand = function(builder, command) {
  builder.addFieldInt8(0, command, SplayApi.COMMAND.GET_ALL_PLAYLISTS_COMMAND);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllPlaylistsReq.endGetAllPlaylistsReq = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {NS14796042768305698587.SplayApi.COMMAND} command
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllPlaylistsReq.createGetAllPlaylistsReq = function(builder, command) {
  SplayApi.GetAllPlaylistsReq.startGetAllPlaylistsReq(builder);
  SplayApi.GetAllPlaylistsReq.addCommand(builder, command);
  return SplayApi.GetAllPlaylistsReq.endGetAllPlaylistsReq(builder);
}

/**
 * @constructor
 */
SplayApi.GetAllPlaylistsRes = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.GetAllPlaylistsRes}
 */
SplayApi.GetAllPlaylistsRes.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetAllPlaylistsRes=} obj
 * @returns {SplayApi.GetAllPlaylistsRes}
 */
SplayApi.GetAllPlaylistsRes.getRootAsGetAllPlaylistsRes = function(bb, obj) {
  return (obj || new SplayApi.GetAllPlaylistsRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetAllPlaylistsRes=} obj
 * @returns {SplayApi.GetAllPlaylistsRes}
 */
SplayApi.GetAllPlaylistsRes.getSizePrefixedRootAsGetAllPlaylistsRes = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.GetAllPlaylistsRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {SplayApi.Playlist=} obj
 * @returns {SplayApi.Playlist}
 */
SplayApi.GetAllPlaylistsRes.prototype.playlists = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new SplayApi.Playlist).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.GetAllPlaylistsRes.prototype.playlistsLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.GetAllPlaylistsRes.startGetAllPlaylistsRes = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playlistsOffset
 */
SplayApi.GetAllPlaylistsRes.addPlaylists = function(builder, playlistsOffset) {
  builder.addFieldOffset(0, playlistsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllPlaylistsRes.createPlaylistsVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.GetAllPlaylistsRes.startPlaylistsVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllPlaylistsRes.endGetAllPlaylistsRes = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} playlistsOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllPlaylistsRes.createGetAllPlaylistsRes = function(builder, playlistsOffset) {
  SplayApi.GetAllPlaylistsRes.startGetAllPlaylistsRes(builder);
  SplayApi.GetAllPlaylistsRes.addPlaylists(builder, playlistsOffset);
  return SplayApi.GetAllPlaylistsRes.endGetAllPlaylistsRes(builder);
}

// Exports for Node.js and RequireJS
this.SplayApi = SplayApi;
