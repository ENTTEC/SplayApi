// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var SplayApi = SplayApi || {};

/**
 * @enum {number}
 */
SplayApi.CUE_TYPE = {
  CUE_TYPE_STATIC: 0,
  CUE_TYPE_DYNAMIC: 1,
  CUE_TYPE_EFFECT: 2
};

/**
 * @enum {string}
 */
SplayApi.CUE_TYPEName = {
  '0': 'CUE_TYPE_STATIC',
  '1': 'CUE_TYPE_DYNAMIC',
  '2': 'CUE_TYPE_EFFECT'
};

/**
 * @enum {number}
 */
SplayApi.Frame = {
  NONE: 0,
  StaticFrame: 1,
  DynamicFrame: 2,
  EffectRainbowFrame: 3
};

/**
 * @enum {string}
 */
SplayApi.FrameName = {
  '0': 'NONE',
  '1': 'StaticFrame',
  '2': 'DynamicFrame',
  '3': 'EffectRainbowFrame'
};

/**
 * @constructor
 */
SplayApi.CueConfig = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.CueConfig}
 */
SplayApi.CueConfig.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.CueConfig=} obj
 * @returns {SplayApi.CueConfig}
 */
SplayApi.CueConfig.getRootAsCueConfig = function(bb, obj) {
  return (obj || new SplayApi.CueConfig).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.CueConfig=} obj
 * @returns {SplayApi.CueConfig}
 */
SplayApi.CueConfig.getSizePrefixedRootAsCueConfig = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.CueConfig).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
SplayApi.CueConfig.prototype.chStart = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
SplayApi.CueConfig.prototype.chStop = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 511;
};

/**
 * @returns {SplayApi.UNIVERSE_TYPE}
 */
SplayApi.CueConfig.prototype.source = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? /** @type {SplayApi.UNIVERSE_TYPE} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.UNIVERSE_TYPE.DMX_TYPE;
};

/**
 * @returns {boolean}
 */
SplayApi.CueConfig.prototype.recControl = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
};

/**
 * @param {SplayApi.Trigger=} obj
 * @returns {SplayApi.Trigger|null}
 */
SplayApi.CueConfig.prototype.trigger = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? (obj || new SplayApi.Trigger).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.CueConfig.startCueConfig = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} chStart
 */
SplayApi.CueConfig.addChStart = function(builder, chStart) {
  builder.addFieldInt16(0, chStart, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} chStop
 */
SplayApi.CueConfig.addChStop = function(builder, chStop) {
  builder.addFieldInt16(1, chStop, 511);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.UNIVERSE_TYPE} source
 */
SplayApi.CueConfig.addSource = function(builder, source) {
  builder.addFieldInt8(2, source, SplayApi.UNIVERSE_TYPE.DMX_TYPE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {boolean} recControl
 */
SplayApi.CueConfig.addRecControl = function(builder, recControl) {
  builder.addFieldInt8(3, +recControl, +false);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} triggerOffset
 */
SplayApi.CueConfig.addTrigger = function(builder, triggerOffset) {
  builder.addFieldOffset(4, triggerOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.CueConfig.endCueConfig = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} chStart
 * @param {number} chStop
 * @param {NS10718616522061772901.SplayApi.UNIVERSE_TYPE} source
 * @param {boolean} recControl
 * @param {flatbuffers.Offset} triggerOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.CueConfig.createCueConfig = function(builder, chStart, chStop, source, recControl, triggerOffset) {
  SplayApi.CueConfig.startCueConfig(builder);
  SplayApi.CueConfig.addChStart(builder, chStart);
  SplayApi.CueConfig.addChStop(builder, chStop);
  SplayApi.CueConfig.addSource(builder, source);
  SplayApi.CueConfig.addRecControl(builder, recControl);
  SplayApi.CueConfig.addTrigger(builder, triggerOffset);
  return SplayApi.CueConfig.endCueConfig(builder);
}

/**
 * @constructor
 */
SplayApi.StaticFrameArray = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.StaticFrameArray}
 */
SplayApi.StaticFrameArray.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.StaticFrameArray=} obj
 * @returns {SplayApi.StaticFrameArray}
 */
SplayApi.StaticFrameArray.getRootAsStaticFrameArray = function(bb, obj) {
  return (obj || new SplayApi.StaticFrameArray).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.StaticFrameArray=} obj
 * @returns {SplayApi.StaticFrameArray}
 */
SplayApi.StaticFrameArray.getSizePrefixedRootAsStaticFrameArray = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.StaticFrameArray).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @returns {number}
 */
SplayApi.StaticFrameArray.prototype.frame = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index) : 0;
};

/**
 * @returns {number}
 */
SplayApi.StaticFrameArray.prototype.frameLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint8Array}
 */
SplayApi.StaticFrameArray.prototype.frameArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.StaticFrameArray.startStaticFrameArray = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} frameOffset
 */
SplayApi.StaticFrameArray.addFrame = function(builder, frameOffset) {
  builder.addFieldOffset(0, frameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.StaticFrameArray.createFrameVector = function(builder, data) {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.StaticFrameArray.startFrameVector = function(builder, numElems) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.StaticFrameArray.endStaticFrameArray = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} frameOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.StaticFrameArray.createStaticFrameArray = function(builder, frameOffset) {
  SplayApi.StaticFrameArray.startStaticFrameArray(builder);
  SplayApi.StaticFrameArray.addFrame(builder, frameOffset);
  return SplayApi.StaticFrameArray.endStaticFrameArray(builder);
}

/**
 * @constructor
 */
SplayApi.StaticFrame = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.StaticFrame}
 */
SplayApi.StaticFrame.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.StaticFrame=} obj
 * @returns {SplayApi.StaticFrame}
 */
SplayApi.StaticFrame.getRootAsStaticFrame = function(bb, obj) {
  return (obj || new SplayApi.StaticFrame).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.StaticFrame=} obj
 * @returns {SplayApi.StaticFrame}
 */
SplayApi.StaticFrame.getSizePrefixedRootAsStaticFrame = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.StaticFrame).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {SplayApi.StaticFrameArray=} obj
 * @returns {SplayApi.StaticFrameArray}
 */
SplayApi.StaticFrame.prototype.frames = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new SplayApi.StaticFrameArray).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.StaticFrame.prototype.framesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.StaticFrame.startStaticFrame = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} framesOffset
 */
SplayApi.StaticFrame.addFrames = function(builder, framesOffset) {
  builder.addFieldOffset(0, framesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.StaticFrame.createFramesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.StaticFrame.startFramesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.StaticFrame.endStaticFrame = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} framesOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.StaticFrame.createStaticFrame = function(builder, framesOffset) {
  SplayApi.StaticFrame.startStaticFrame(builder);
  SplayApi.StaticFrame.addFrames(builder, framesOffset);
  return SplayApi.StaticFrame.endStaticFrame(builder);
}

/**
 * @constructor
 */
SplayApi.DynamicFrame = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.DynamicFrame}
 */
SplayApi.DynamicFrame.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.DynamicFrame=} obj
 * @returns {SplayApi.DynamicFrame}
 */
SplayApi.DynamicFrame.getRootAsDynamicFrame = function(bb, obj) {
  return (obj || new SplayApi.DynamicFrame).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.DynamicFrame=} obj
 * @returns {SplayApi.DynamicFrame}
 */
SplayApi.DynamicFrame.getSizePrefixedRootAsDynamicFrame = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.DynamicFrame).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.DynamicFrame.startDynamicFrame = function(builder) {
  builder.startObject(0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.DynamicFrame.endDynamicFrame = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.DynamicFrame.createDynamicFrame = function(builder) {
  SplayApi.DynamicFrame.startDynamicFrame(builder);
  return SplayApi.DynamicFrame.endDynamicFrame(builder);
}

/**
 * @constructor
 */
SplayApi.EffectRainbowFrame = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.EffectRainbowFrame}
 */
SplayApi.EffectRainbowFrame.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.EffectRainbowFrame=} obj
 * @returns {SplayApi.EffectRainbowFrame}
 */
SplayApi.EffectRainbowFrame.getRootAsEffectRainbowFrame = function(bb, obj) {
  return (obj || new SplayApi.EffectRainbowFrame).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.EffectRainbowFrame=} obj
 * @returns {SplayApi.EffectRainbowFrame}
 */
SplayApi.EffectRainbowFrame.getSizePrefixedRootAsEffectRainbowFrame = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.EffectRainbowFrame).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {SplayApi.PIXEL_ORDER}
 */
SplayApi.EffectRainbowFrame.prototype.pixelOrder = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {SplayApi.PIXEL_ORDER} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.PIXEL_ORDER.RGB;
};

/**
 * @returns {number}
 */
SplayApi.EffectRainbowFrame.prototype.ledsOffset = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
SplayApi.EffectRainbowFrame.prototype.numberOfLeds = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns {number}
 */
SplayApi.EffectRainbowFrame.prototype.beatsPerMin = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @returns {number}
 */
SplayApi.EffectRainbowFrame.prototype.universes = function(index) {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.readUint16(this.bb.__vector(this.bb_pos + offset) + index * 2) : 0;
};

/**
 * @returns {number}
 */
SplayApi.EffectRainbowFrame.prototype.universesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns {Uint16Array}
 */
SplayApi.EffectRainbowFrame.prototype.universesArray = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? new Uint16Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.EffectRainbowFrame.startEffectRainbowFrame = function(builder) {
  builder.startObject(5);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.PIXEL_ORDER} pixelOrder
 */
SplayApi.EffectRainbowFrame.addPixelOrder = function(builder, pixelOrder) {
  builder.addFieldInt8(0, pixelOrder, SplayApi.PIXEL_ORDER.RGB);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} ledsOffset
 */
SplayApi.EffectRainbowFrame.addLedsOffset = function(builder, ledsOffset) {
  builder.addFieldInt16(1, ledsOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numberOfLeds
 */
SplayApi.EffectRainbowFrame.addNumberOfLeds = function(builder, numberOfLeds) {
  builder.addFieldInt16(2, numberOfLeds, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} beatsPerMin
 */
SplayApi.EffectRainbowFrame.addBeatsPerMin = function(builder, beatsPerMin) {
  builder.addFieldInt16(3, beatsPerMin, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} universesOffset
 */
SplayApi.EffectRainbowFrame.addUniverses = function(builder, universesOffset) {
  builder.addFieldOffset(4, universesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<number>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.EffectRainbowFrame.createUniversesVector = function(builder, data) {
  builder.startVector(2, data.length, 2);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt16(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.EffectRainbowFrame.startUniversesVector = function(builder, numElems) {
  builder.startVector(2, numElems, 2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.EffectRainbowFrame.endEffectRainbowFrame = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {NS10718616522061772901.SplayApi.PIXEL_ORDER} pixelOrder
 * @param {number} ledsOffset
 * @param {number} numberOfLeds
 * @param {number} beatsPerMin
 * @param {flatbuffers.Offset} universesOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.EffectRainbowFrame.createEffectRainbowFrame = function(builder, pixelOrder, ledsOffset, numberOfLeds, beatsPerMin, universesOffset) {
  SplayApi.EffectRainbowFrame.startEffectRainbowFrame(builder);
  SplayApi.EffectRainbowFrame.addPixelOrder(builder, pixelOrder);
  SplayApi.EffectRainbowFrame.addLedsOffset(builder, ledsOffset);
  SplayApi.EffectRainbowFrame.addNumberOfLeds(builder, numberOfLeds);
  SplayApi.EffectRainbowFrame.addBeatsPerMin(builder, beatsPerMin);
  SplayApi.EffectRainbowFrame.addUniverses(builder, universesOffset);
  return SplayApi.EffectRainbowFrame.endEffectRainbowFrame(builder);
}

/**
 * @constructor
 */
SplayApi.Cue = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.Cue}
 */
SplayApi.Cue.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.Cue=} obj
 * @returns {SplayApi.Cue}
 */
SplayApi.Cue.getRootAsCue = function(bb, obj) {
  return (obj || new SplayApi.Cue).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.Cue=} obj
 * @returns {SplayApi.Cue}
 */
SplayApi.Cue.getSizePrefixedRootAsCue = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.Cue).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {number}
 */
SplayApi.Cue.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {SplayApi.CUE_TYPE}
 */
SplayApi.Cue.prototype.type = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {SplayApi.CUE_TYPE} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.CUE_TYPE.CUE_TYPE_STATIC;
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
SplayApi.Cue.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
SplayApi.Cue.prototype.duration = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
};

/**
 * @returns {SplayApi.Frame}
 */
SplayApi.Cue.prototype.frameType = function() {
  var offset = this.bb.__offset(this.bb_pos, 12);
  return offset ? /** @type {SplayApi.Frame} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.Frame.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
SplayApi.Cue.prototype.frame = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 14);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {SplayApi.CueConfig=} obj
 * @returns {SplayApi.CueConfig|null}
 */
SplayApi.Cue.prototype.config = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 16);
  return offset ? (obj || new SplayApi.CueConfig).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.Cue.startCue = function(builder) {
  builder.startObject(7);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 */
SplayApi.Cue.addId = function(builder, id) {
  builder.addFieldInt32(0, id, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.CUE_TYPE} type
 */
SplayApi.Cue.addType = function(builder, type) {
  builder.addFieldInt8(1, type, SplayApi.CUE_TYPE.CUE_TYPE_STATIC);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
SplayApi.Cue.addName = function(builder, nameOffset) {
  builder.addFieldOffset(2, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} duration
 */
SplayApi.Cue.addDuration = function(builder, duration) {
  builder.addFieldInt32(3, duration, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.Frame} frameType
 */
SplayApi.Cue.addFrameType = function(builder, frameType) {
  builder.addFieldInt8(4, frameType, SplayApi.Frame.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} frameOffset
 */
SplayApi.Cue.addFrame = function(builder, frameOffset) {
  builder.addFieldOffset(5, frameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} configOffset
 */
SplayApi.Cue.addConfig = function(builder, configOffset) {
  builder.addFieldOffset(6, configOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.Cue.endCue = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} id
 * @param {SplayApi.CUE_TYPE} type
 * @param {flatbuffers.Offset} nameOffset
 * @param {number} duration
 * @param {SplayApi.Frame} frameType
 * @param {flatbuffers.Offset} frameOffset
 * @param {flatbuffers.Offset} configOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.Cue.createCue = function(builder, id, type, nameOffset, duration, frameType, frameOffset, configOffset) {
  SplayApi.Cue.startCue(builder);
  SplayApi.Cue.addId(builder, id);
  SplayApi.Cue.addType(builder, type);
  SplayApi.Cue.addName(builder, nameOffset);
  SplayApi.Cue.addDuration(builder, duration);
  SplayApi.Cue.addFrameType(builder, frameType);
  SplayApi.Cue.addFrame(builder, frameOffset);
  SplayApi.Cue.addConfig(builder, configOffset);
  return SplayApi.Cue.endCue(builder);
}

/**
 * @constructor
 */
SplayApi.GetCueReq = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.GetCueReq}
 */
SplayApi.GetCueReq.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetCueReq=} obj
 * @returns {SplayApi.GetCueReq}
 */
SplayApi.GetCueReq.getRootAsGetCueReq = function(bb, obj) {
  return (obj || new SplayApi.GetCueReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetCueReq=} obj
 * @returns {SplayApi.GetCueReq}
 */
SplayApi.GetCueReq.getSizePrefixedRootAsGetCueReq = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.GetCueReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {SplayApi.COMMAND}
 */
SplayApi.GetCueReq.prototype.command = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {SplayApi.COMMAND} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.COMMAND.GET_CUE_COMMAND;
};

/**
 * @returns {number}
 */
SplayApi.GetCueReq.prototype.cueId = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.GetCueReq.startGetCueReq = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.COMMAND} command
 */
SplayApi.GetCueReq.addCommand = function(builder, command) {
  builder.addFieldInt8(0, command, SplayApi.COMMAND.GET_CUE_COMMAND);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} cueId
 */
SplayApi.GetCueReq.addCueId = function(builder, cueId) {
  builder.addFieldInt32(1, cueId, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetCueReq.endGetCueReq = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {NS14796042768305698587.SplayApi.COMMAND} command
 * @param {number} cueId
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetCueReq.createGetCueReq = function(builder, command, cueId) {
  SplayApi.GetCueReq.startGetCueReq(builder);
  SplayApi.GetCueReq.addCommand(builder, command);
  SplayApi.GetCueReq.addCueId(builder, cueId);
  return SplayApi.GetCueReq.endGetCueReq(builder);
}

/**
 * @constructor
 */
SplayApi.GetCueRes = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.GetCueRes}
 */
SplayApi.GetCueRes.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetCueRes=} obj
 * @returns {SplayApi.GetCueRes}
 */
SplayApi.GetCueRes.getRootAsGetCueRes = function(bb, obj) {
  return (obj || new SplayApi.GetCueRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetCueRes=} obj
 * @returns {SplayApi.GetCueRes}
 */
SplayApi.GetCueRes.getSizePrefixedRootAsGetCueRes = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.GetCueRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {SplayApi.Cue=} obj
 * @returns {SplayApi.Cue|null}
 */
SplayApi.GetCueRes.prototype.cue = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new SplayApi.Cue).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.GetCueRes.startGetCueRes = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cueOffset
 */
SplayApi.GetCueRes.addCue = function(builder, cueOffset) {
  builder.addFieldOffset(0, cueOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetCueRes.endGetCueRes = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cueOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetCueRes.createGetCueRes = function(builder, cueOffset) {
  SplayApi.GetCueRes.startGetCueRes(builder);
  SplayApi.GetCueRes.addCue(builder, cueOffset);
  return SplayApi.GetCueRes.endGetCueRes(builder);
}

/**
 * @constructor
 */
SplayApi.GetAllCuesReq = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.GetAllCuesReq}
 */
SplayApi.GetAllCuesReq.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetAllCuesReq=} obj
 * @returns {SplayApi.GetAllCuesReq}
 */
SplayApi.GetAllCuesReq.getRootAsGetAllCuesReq = function(bb, obj) {
  return (obj || new SplayApi.GetAllCuesReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetAllCuesReq=} obj
 * @returns {SplayApi.GetAllCuesReq}
 */
SplayApi.GetAllCuesReq.getSizePrefixedRootAsGetAllCuesReq = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.GetAllCuesReq).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {SplayApi.COMMAND}
 */
SplayApi.GetAllCuesReq.prototype.command = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? /** @type {SplayApi.COMMAND} */ (this.bb.readUint8(this.bb_pos + offset)) : SplayApi.COMMAND.GET_ALL_CUES_COMMAND;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.GetAllCuesReq.startGetAllCuesReq = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {SplayApi.COMMAND} command
 */
SplayApi.GetAllCuesReq.addCommand = function(builder, command) {
  builder.addFieldInt8(0, command, SplayApi.COMMAND.GET_ALL_CUES_COMMAND);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllCuesReq.endGetAllCuesReq = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {NS14796042768305698587.SplayApi.COMMAND} command
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllCuesReq.createGetAllCuesReq = function(builder, command) {
  SplayApi.GetAllCuesReq.startGetAllCuesReq(builder);
  SplayApi.GetAllCuesReq.addCommand(builder, command);
  return SplayApi.GetAllCuesReq.endGetAllCuesReq(builder);
}

/**
 * @constructor
 */
SplayApi.GetAllCuesRes = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {SplayApi.GetAllCuesRes}
 */
SplayApi.GetAllCuesRes.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetAllCuesRes=} obj
 * @returns {SplayApi.GetAllCuesRes}
 */
SplayApi.GetAllCuesRes.getRootAsGetAllCuesRes = function(bb, obj) {
  return (obj || new SplayApi.GetAllCuesRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {SplayApi.GetAllCuesRes=} obj
 * @returns {SplayApi.GetAllCuesRes}
 */
SplayApi.GetAllCuesRes.getSizePrefixedRootAsGetAllCuesRes = function(bb, obj) {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SplayApi.GetAllCuesRes).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {SplayApi.Cue=} obj
 * @returns {SplayApi.Cue}
 */
SplayApi.GetAllCuesRes.prototype.cues = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new SplayApi.Cue).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
SplayApi.GetAllCuesRes.prototype.cuesLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
SplayApi.GetAllCuesRes.startGetAllCuesRes = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cuesOffset
 */
SplayApi.GetAllCuesRes.addCues = function(builder, cuesOffset) {
  builder.addFieldOffset(0, cuesOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllCuesRes.createCuesVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
SplayApi.GetAllCuesRes.startCuesVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllCuesRes.endGetAllCuesRes = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cuesOffset
 * @returns {flatbuffers.Offset}
 */
SplayApi.GetAllCuesRes.createGetAllCuesRes = function(builder, cuesOffset) {
  SplayApi.GetAllCuesRes.startGetAllCuesRes(builder);
  SplayApi.GetAllCuesRes.addCues(builder, cuesOffset);
  return SplayApi.GetAllCuesRes.endGetAllCuesRes(builder);
}

// Exports for ECMAScript6 Modules
export {SplayApi};
