// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class BackupInfo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BackupInfo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBackupInfo(bb:flatbuffers.ByteBuffer, obj?:BackupInfo):BackupInfo {
  return (obj || new BackupInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBackupInfo(bb:flatbuffers.ByteBuffer, obj?:BackupInfo):BackupInfo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BackupInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

inProgress():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

link():string|null
link(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
link(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

message():string|null
message(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
message(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

error():string|null
error(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
error(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startBackupInfo(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addInProgress(builder:flatbuffers.Builder, inProgress:boolean) {
  builder.addFieldInt8(0, +inProgress, +false);
}

static addLink(builder:flatbuffers.Builder, linkOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, linkOffset, 0);
}

static addMessage(builder:flatbuffers.Builder, messageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, messageOffset, 0);
}

static addError(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, errorOffset, 0);
}

static endBackupInfo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBackupInfo(builder:flatbuffers.Builder, inProgress:boolean, linkOffset:flatbuffers.Offset, messageOffset:flatbuffers.Offset, errorOffset:flatbuffers.Offset):flatbuffers.Offset {
  BackupInfo.startBackupInfo(builder);
  BackupInfo.addInProgress(builder, inProgress);
  BackupInfo.addLink(builder, linkOffset);
  BackupInfo.addMessage(builder, messageOffset);
  BackupInfo.addError(builder, errorOffset);
  return BackupInfo.endBackupInfo(builder);
}
}
