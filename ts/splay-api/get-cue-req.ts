// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { COMMAND } from '../splay-api/command.js';


export class GetCueReq {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetCueReq {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetCueReq(bb:flatbuffers.ByteBuffer, obj?:GetCueReq):GetCueReq {
  return (obj || new GetCueReq()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetCueReq(bb:flatbuffers.ByteBuffer, obj?:GetCueReq):GetCueReq {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetCueReq()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

command():COMMAND {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : COMMAND.GET_CUE;
}

cueId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startGetCueReq(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addCommand(builder:flatbuffers.Builder, command:COMMAND) {
  builder.addFieldInt8(0, command, COMMAND.GET_CUE);
}

static addCueId(builder:flatbuffers.Builder, cueId:number) {
  builder.addFieldInt32(1, cueId, 0);
}

static endGetCueReq(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetCueReq(builder:flatbuffers.Builder, command:COMMAND, cueId:number):flatbuffers.Offset {
  GetCueReq.startGetCueReq(builder);
  GetCueReq.addCommand(builder, command);
  GetCueReq.addCueId(builder, cueId);
  return GetCueReq.endGetCueReq(builder);
}
}
