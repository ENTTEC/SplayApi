// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class StatusRes {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StatusRes {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStatusRes(bb:flatbuffers.ByteBuffer, obj?:StatusRes):StatusRes {
  return (obj || new StatusRes()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStatusRes(bb:flatbuffers.ByteBuffer, obj?:StatusRes):StatusRes {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StatusRes()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

result():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

error():string|null
error(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
error(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startStatusRes(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addResult(builder:flatbuffers.Builder, result:boolean) {
  builder.addFieldInt8(0, +result, +false);
}

static addError(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, errorOffset, 0);
}

static endStatusRes(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStatusRes(builder:flatbuffers.Builder, result:boolean, errorOffset:flatbuffers.Offset):flatbuffers.Offset {
  StatusRes.startStatusRes(builder);
  StatusRes.addResult(builder, result);
  StatusRes.addError(builder, errorOffset);
  return StatusRes.endStatusRes(builder);
}
}
