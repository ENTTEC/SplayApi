// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class GetUploadStatus {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetUploadStatus {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetUploadStatus(bb:flatbuffers.ByteBuffer, obj?:GetUploadStatus):GetUploadStatus {
  return (obj || new GetUploadStatus()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetUploadStatus(bb:flatbuffers.ByteBuffer, obj?:GetUploadStatus):GetUploadStatus {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetUploadStatus()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

progress():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

sequence():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

error():string|null
error(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
error(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startGetUploadStatus(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addProgress(builder:flatbuffers.Builder, progress:number) {
  builder.addFieldInt8(0, progress, 0);
}

static addSequence(builder:flatbuffers.Builder, sequence:number) {
  builder.addFieldInt16(1, sequence, 0);
}

static addError(builder:flatbuffers.Builder, errorOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, errorOffset, 0);
}

static endGetUploadStatus(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetUploadStatus(builder:flatbuffers.Builder, progress:number, sequence:number, errorOffset:flatbuffers.Offset):flatbuffers.Offset {
  GetUploadStatus.startGetUploadStatus(builder);
  GetUploadStatus.addProgress(builder, progress);
  GetUploadStatus.addSequence(builder, sequence);
  GetUploadStatus.addError(builder, errorOffset);
  return GetUploadStatus.endGetUploadStatus(builder);
}
}
