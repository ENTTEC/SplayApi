// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { COMMAND } from '../splay-api/command.js';


export class StopPlaylistReq {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):StopPlaylistReq {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsStopPlaylistReq(bb:flatbuffers.ByteBuffer, obj?:StopPlaylistReq):StopPlaylistReq {
  return (obj || new StopPlaylistReq()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsStopPlaylistReq(bb:flatbuffers.ByteBuffer, obj?:StopPlaylistReq):StopPlaylistReq {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new StopPlaylistReq()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

command():COMMAND {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : COMMAND.STOP;
}

playlistId():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
}

static startStopPlaylistReq(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addCommand(builder:flatbuffers.Builder, command:COMMAND) {
  builder.addFieldInt8(0, command, COMMAND.STOP);
}

static addPlaylistId(builder:flatbuffers.Builder, playlistId:number) {
  builder.addFieldInt32(1, playlistId, 0);
}

static endStopPlaylistReq(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createStopPlaylistReq(builder:flatbuffers.Builder, command:COMMAND, playlistId:number):flatbuffers.Offset {
  StopPlaylistReq.startStopPlaylistReq(builder);
  StopPlaylistReq.addCommand(builder, command);
  StopPlaylistReq.addPlaylistId(builder, playlistId);
  return StopPlaylistReq.endStopPlaylistReq(builder);
}
}
